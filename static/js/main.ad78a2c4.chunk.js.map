{"version":3,"sources":["Assets/images/logo.webp","Assets/images/illustrations/consulterMail.svg","Routes/Accueil.js","GlobalComponents/form.js","Tools/animations.js","Tools/formValidator.js","RoutesSubComponents/authComponents.js","Routes/Connexion.js","Routes/Inscription.js","App.js","reportWebVitals.js","index.js"],"names":["Accueil","className","src","require","default","class","to","SelectModal","props","useState","options","setOptions","useEffect","initialOptions","closeSelectModal","document","querySelector","classList","remove","modalClass","onClick","type","placeholder","onChange","event","value","target","res","filter","item","toLowerCase","includes","length","handleSearch","selectTitle","map","option","handleChange","name","selectName","btnAnimation","setAttribute","setTimeout","toggleFormBtnClickable","formFieldsIsValid","disabled","getError","fieldName","errors","errorList","err","error","isValidChar","validationType","setErrors","charName","char","charMsgTitle","charConfirm","copyErrs","slice","regex","errorMsg","test","errExist","newError","i","splice","AuthContainer","otherAuthLink","authType","otherAuthMsg2","otherAuthMsg1","authForm","AuthFormConnexion","AuthFormInscription","currentStep","setCurrentStep","formFieldIsValid","setFFIV","formFieldValues","setFV","selectModal","setSM","passwordView","setPV","checkFormState","formField","cond","pseudo","mail","age","sexe","université","filière","password","confirm_password","minLength","maxLength","isValidLenght","minValue","maxValue","unit","isValidNumberValue","allStep","inscriptionSteps","toggleClass","add","onSubmit","preventDefault","children","handleSubmit","fields","setModalInfo","universités","filières","htmlFor","id","Connexion","Inscription","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad78a2c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.36dc5737.webp\";","export default __webpack_public_path__ + \"static/media/consulterMail.af4d40f8.svg\";","import { Link } from \"react-router-dom\";\r\nimport \"../Assets/styles/accueil.css\"\r\nconst Accueil = () => {\r\n    return <div className=\"homePart\">\r\n        <img src={require(\"../Assets/images/logo.webp\").default} />\r\n        <h1>Bienvenue sur Univearn</h1>\r\n        <section>\r\n            <Link class=\"button-anim1\" to=\"/Inscription\">Rejoindre l'aventure</Link>\r\n            <Link class=\"button-anim1\" to=\"/Connexion\">Connexion</Link>\r\n        </section>\r\n    </div>\r\n}\r\n\r\nexport default Accueil;","import { useEffect, useState } from \"react\";\r\n\r\n\r\nexport const SelectModal = ({ props }) => {\r\n\r\n    const [options, setOptions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setOptions(props.initialOptions)\r\n    }, [props.initialOptions])\r\n\r\n    const handleSearch = (event) => {\r\n        let value = event.target.value;\r\n        const res = props.initialOptions.filter(item => item.toLowerCase().includes(value.toLowerCase()))\r\n        res.length > 0 ? setOptions(res) : setOptions(['Aucun resultat trouvé'])\r\n    }\r\n\r\n    const closeSelectModal = () => {\r\n        document.querySelector('.modal').classList.remove(props.modalClass);\r\n    }\r\n\r\n    const selectOption = (value) => {\r\n        props.handleChange({ target: { name: props.selectName, value: value } })\r\n        closeSelectModal();\r\n    }\r\n\r\n    return <div className={\"modal\"}>\r\n        <div className=\"selectModal modalBody\">\r\n            <p className=\"modalCloser\" onClick={() => closeSelectModal()}>\r\n                <i className=\"mdi mdi-close\"></i></p>\r\n            <div className=\"searchPart\">\r\n                <input type=\"search\" placeholder=\"Chercher ici...\"\r\n                    onChange={(event) => handleSearch(event)} />\r\n            </div>\r\n            <h3>Selectionnez {props.selectTitle} </h3>\r\n            <div className=\"selectList\">\r\n                {\r\n                    options.map(option => <section key={option}>\r\n                        <span>{option} </span>\r\n                        {option != 'Aucun resultat trouvé'\r\n                            ? < button onClick={() => selectOption(option)}> Choisir</button>\r\n                            : ''}\r\n                    </section>)\r\n                }\r\n            </div>\r\n        </div>\r\n    </div >\r\n}","export const btnAnimation = (event) => {\r\n    event.target.setAttribute('class', 'btnClicked');\r\n    setTimeout(() => {\r\n        event.target.classList.remove('btnClicked');\r\n    }, 400);\r\n}","export const toggleFormBtnClickable = (formFieldsIsValid, btnAnimation = null) => {\r\n    if (formFieldsIsValid == true) {\r\n        return <button\r\n            onClick={(event) => btnAnimation(event)}>Suivant</button>\r\n    } else {\r\n        return <button disabled className=\"btnDisabled\">Suivant</button>\r\n    }\r\n\r\n}\r\n\r\nexport const getError = (fieldName, errors) => {\r\n    const errorList = errors.filter(item => item.name == fieldName);\r\n    if (errorList.length > 0) {\r\n        return errorList.map(err => <span className=\"errorField\" key={err.type}>{err.error}</span>)\r\n\r\n    }\r\n}\r\n\r\nexport const isValidLenght = (errors, setErrors, charName, char, minLength, maxLength, charMsgTitle) => {\r\n    const copyErrs = errors.slice();\r\n    const errorMsg = 'Erreur: ' + charMsgTitle + ' doit contenir entre ' + minLength + ' et ' + maxLength + ' charactère';\r\n    const errExist = copyErrs.filter(err => err.name == charName && err.type == 'charLength');\r\n\r\n    if (char.length < minLength || char.length > maxLength) {\r\n        let newError = { name: charName, error: errorMsg, type: 'charLength' }\r\n        if (errExist.length == 0) {\r\n            setErrors([...copyErrs, newError])\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < copyErrs.length; i++) {\r\n            if (copyErrs[i].name == charName && copyErrs[i].type == 'charLength') {\r\n                copyErrs.splice(i, 1)\r\n                return setErrors(copyErrs)\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const isValidNumberValue = (errors, setErrors, charName, char, minValue, maxValue, charMsgTitle, unit) => {\r\n    const copyErrs = errors.slice();\r\n    const errorMsg = 'Erreur: ' + charMsgTitle + ' doit etre entre ' + minValue + ' et ' + maxValue + ' ' + unit;\r\n    const errExist = copyErrs.filter(err => err.name == charName && err.type == 'charLength');\r\n\r\n    if (char < minValue || char > maxValue) {\r\n        let newError = { name: charName, error: errorMsg, type: 'charLength' }\r\n        if (errExist.length == 0) {\r\n            setErrors([...copyErrs, newError])\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < copyErrs.length; i++) {\r\n            if (copyErrs[i].name == charName && copyErrs[i].type == 'charLength') {\r\n                copyErrs.splice(i, 1)\r\n                return setErrors(copyErrs)\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const isValidChar = (validationType, errors, setErrors, charName, char, charMsgTitle, charConfirm = null) => {\r\n    const copyErrs = errors.slice();\r\n    let regex = null;\r\n    let errorMsg = null;\r\n\r\n    if (validationType == 'isNumeric') {\r\n        regex = /^[0-9]+$/.test(char);\r\n        errorMsg = 'Erreur: ' + charMsgTitle + ' doit etre au format numerique';\r\n    }\r\n    else if (validationType == 'isAlpha') {\r\n        regex = /^[a-zA-Z]+$/.test(char);\r\n        errorMsg = 'Erreur: ' + charMsgTitle + ' doit etre au format alphabetique';\r\n    }\r\n    else if (validationType == 'isAlphaWithSpace') {\r\n        regex = /^[a-zA-Z- ]+$/.test(char);\r\n        errorMsg = 'Erreur: ' + charMsgTitle + ' doit etre au format alphabetique';\r\n    }\r\n    else if (validationType == 'isAlphaNumeric') {\r\n        regex = /^[a-zA-Z-0-9]+$/.test(char);\r\n        errorMsg = 'Erreur: ' + charMsgTitle + ' doit etre au format alpha-numerique';\r\n    }\r\n    else if (validationType == 'isMail') {\r\n        regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(char);\r\n        errorMsg = 'Erreur: ' + charMsgTitle + ' format du mail incorrect';\r\n    }\r\n    else if (validationType == 'isPassword') {\r\n        regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{6,}$/.test(char);\r\n        errorMsg = 'Erreur: ' + charMsgTitle + ' doit contenir au moins ' +\r\n            '1 majuscule,1 miniscule,1 caractère special,1 chiffre';\r\n    }\r\n    else if (validationType == 'isPasswordConfirm') {\r\n        regex = char === charConfirm;\r\n        errorMsg = 'Erreur: ' + charMsgTitle + ' ne correspondent pas';\r\n    }\r\n\r\n    const errExist = copyErrs.filter(err => err.name == charName && err.type == validationType);\r\n    if (regex == false) {\r\n        let newError = { name: charName, error: errorMsg, type: validationType }\r\n        if (errExist.length == 0) {\r\n            setErrors([...copyErrs, newError])\r\n        }\r\n    }\r\n    else {\r\n        for (let i = 0; i < copyErrs.length; i++) {\r\n            if (copyErrs[i].name == charName && copyErrs[i].type == validationType) {\r\n                copyErrs.splice(i, 1)\r\n                return setErrors(copyErrs)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SelectModal } from \"../GlobalComponents/form\";\r\nimport { btnAnimation } from '../Tools/animations'\r\nimport { toggleFormBtnClickable, isValidNumberValue, isValidLenght, isValidChar, getError } from \"../Tools/formValidator\";\r\n\r\nexport const AuthContainer = ({ props }) => {\r\n\r\n    const otherAuthLink = props.authType == 'Connexion' ? 'Inscription' : 'Connexion';\r\n    const otherAuthMsg2 = props.authType == 'Connexion' ? \"Inscrivez vous !\" : \"Connectez vous !\";\r\n    const otherAuthMsg1 = props.authType == 'Connexion' ? \"Vous n'avez pas encore de compte ?\" : \"Vous avez deja un compte ?\";\r\n\r\n\r\n    return (<div className=\"authPart\">\r\n        <div className=\"authBody\">\r\n            <section className=\"authHeader\">\r\n                <Link to=\"/\"><img src={require(\"../Assets/images/logo.webp\").default} /></Link>\r\n                <hr />\r\n                <span>Réseau social etudiant</span>\r\n            </section>\r\n\r\n            <section className=\"authFormPart\">\r\n                <h2>{props.authType}</h2>\r\n                {props.authForm}\r\n                <div className=\"otherAuth\">\r\n                    <p>{otherAuthMsg1} </p>\r\n                    <Link to={\"/\" + otherAuthLink}>{otherAuthMsg2}</Link>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport const AuthFormConnexion = () => {\r\n    return (<form className=\"authForm\">\r\n        <div className=\"formSegment\">\r\n            <label>Pseudo ou Mail</label>\r\n            <input type=\"text\" placeholder=\"Jhon,john@gmail.com...\" />\r\n        </div>\r\n        <div className=\"formSegment\">\r\n            <label>Mot de passe</label>\r\n            <input type=\"password\" placeholder=\"MonMotDePasse\" />\r\n        </div>\r\n        <div className=\"formBtn\">\r\n            <button>Connexion</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nexport const AuthFormInscription = () => {\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const [formFieldIsValid, setFFIV] = useState(false);\r\n    const [formFieldValues, setFV] = useState({\r\n        'pseudo': '', 'mail': '',\r\n        'age': '', 'sexe': '',\r\n        'université': '', 'filière': '',\r\n        'password': '', 'password_confirm': ''\r\n    });\r\n    const [errors, setErrors] = useState([]);\r\n    const [selectModal, setSM] = useState({ class: 'modalSelect', name: '', options: [] })\r\n    const [passwordView, setPV] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setFFIV(checkFormState(formFieldValues, errors))\r\n    }, [formFieldValues])\r\n\r\n    // Set Modal info on select Input clic\r\n    const setModalInfo = (name, toggleClass, options) => {\r\n        setSM({ ...selectModal, name: name, options: options });\r\n        document.querySelector('.modal').classList.add(toggleClass);\r\n\r\n    }\r\n    // Check if all form field is valid without error\r\n    const checkFormState = (formField, errors) => {\r\n        let cond = null;\r\n        if (currentStep == 0) { cond = formField.pseudo != '' && formField.mail != '' }\r\n        else if (currentStep == 1) { cond = formField.age != '' && formField.sexe != '' }\r\n        else if (currentStep == 2) { cond = formField.université != '' && formField.filière != '' }\r\n        else if (currentStep == 3) { cond = formField.password != '' && formField.confirm_password != '' }\r\n        if (cond) {\r\n            return (errors.length == 0) ? true : false;\r\n        }\r\n    }\r\n\r\n    // Handle field value change\r\n    const handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        if (name == 'pseudo') {\r\n            isValidLenght(errors, setErrors, name, value, 5, 8, \"le pseudo\")\r\n        }\r\n        if (name == 'mail') {\r\n            isValidChar('isMail', errors, setErrors, 'mail', value, \"le mail\")\r\n        }\r\n        if (name == 'password') {\r\n            isValidChar('isPassword', errors, setErrors,\r\n                'password', value, \"le mot de passe\")\r\n        }\r\n        if (name == 'password_confirm') {\r\n            isValidChar('isPasswordConfirm', errors, setErrors,\r\n                'password_confirm', value, \"les mots de passe\", formFieldValues.password)\r\n        }\r\n        if (name == 'age') {\r\n            isValidNumberValue(errors, setErrors, name, value, 14, 40, \"l\\'age\", \"ans\")\r\n        }\r\n        setFV({ ...formFieldValues, [name]: value });\r\n    }\r\n\r\n    // Handle form is submit\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setCurrentStep(currentStep + 1)\r\n        document.querySelector('.formStepIllustration')\r\n            .children[currentStep].setAttribute('class', 'stepNumberPassed');\r\n        setFFIV(false);\r\n    }\r\n    // Get all form step\r\n    const allStep = inscriptionSteps(handleChange, formFieldValues, errors,\r\n        passwordView, setPV, setModalInfo);\r\n\r\n    return (<> <form onSubmit={(event) => handleSubmit(event)} className=\"authForm\">\r\n        <div className=\"formStepIllustration\">\r\n            <span>1</span>\r\n            <span>2</span>\r\n            <span>3</span>\r\n            <span>4</span>\r\n        </div>\r\n        {allStep[currentStep]}\r\n        {\r\n            currentStep < 4 ?\r\n                <div className=\"formBtn\">\r\n                    {toggleFormBtnClickable(formFieldIsValid, btnAnimation)}\r\n                </div>\r\n                : ''\r\n        }\r\n    </form>\r\n        <SelectModal props={{\r\n            modalClass: selectModal.class,\r\n            selectName: selectModal.name,\r\n            selectTitle: \"l\\'université\",\r\n            handleChange: handleChange,\r\n            initialOptions: selectModal.options\r\n        }} />\r\n    </>)\r\n}\r\n\r\nconst inscriptionSteps = (onChange, fields, errors, passwordView, setPV, setModalInfo) => {\r\n\r\n    const universités = [\"U1\", \"U2\"];\r\n    const filières = [\"F1\", \"F2\"];\r\n\r\n    const step1 = <><div className=\"formSegment\">\r\n        <label>Pseudo</label>\r\n        <input type=\"text\" placeholder=\"Pseudo...\" name=\"pseudo\"\r\n            onChange={(event) => onChange(event)} />\r\n        {getError('pseudo', errors)}\r\n    </div>\r\n        <div className=\"formSegment\">\r\n            <label>Mail</label>\r\n            <input type=\"mail\" placeholder=\"Mail...\" name=\"mail\"\r\n                onChange={(event) => onChange(event)} />\r\n            {getError('mail', errors)}\r\n        </div></>;\r\n\r\n    const step2 = <><div className=\"formSegment\">\r\n        <label>Age</label>\r\n        <input type=\"number\" placeholder=\"Age...\" name=\"age\"\r\n            onChange={(event) => onChange(event)} />\r\n        {getError('age', errors)}\r\n    </div>\r\n        <div className=\"formSegment\">\r\n            <label>Sexe</label>\r\n            <select name=\"sexe\" onChange={(event) => onChange(event)}>\r\n                <option>Homme</option>\r\n                <option>Femme</option>\r\n            </select>\r\n        </div></>\r\n\r\n    const step3 = <><div className=\"formSegment\">\r\n        <label>Université</label>\r\n        <input type=\"text\" placeholder=\"Université...\"\r\n            name='université' value={fields.université}\r\n            onClick={() => setModalInfo('université', 'modalSelect', universités)}\r\n            onChange={(event) => onChange(event)} />\r\n    </div>\r\n        <div className=\"formSegment\">\r\n            <label>Filière</label>\r\n            <input type=\"text\" placeholder=\"Filère...\"\r\n                name='filière' value={fields.filière}\r\n                onClick={() => setModalInfo('filière', 'modalSelect', filières)}\r\n                onChange={(event) => onChange(event)}\r\n            />\r\n        </div></>\r\n\r\n    const step4 = <><div className=\"formSegment\">\r\n        <label>Mot de passe</label>\r\n        <input type={passwordView ? \"text\" : \"password\"} placeholder=\"Mot de passe...\"\r\n            name=\"password\" onChange={(event) => onChange(event)} />\r\n        {getError('password', errors)}\r\n    </div>\r\n        <div className=\"formSegment\">\r\n            <label>Confirmer mot de passe</label>\r\n            <input type={passwordView ? \"text\" : \"password\"} placeholder=\"Confirmation...\"\r\n                name=\"password_confirm\" onChange={(event) => onChange(event)} />\r\n            {getError('password_confirm', errors)}\r\n        </div>\r\n        <div className=\"formViewPassword\">\r\n            <label htmlFor=\"viewPassword\">\r\n                <input type=\"checkbox\" name=\"viewPassword\" id=\"viewPassword\"\r\n                    onClick={() => setPV(!passwordView)} />Voir mot de passe\r\n            </label>\r\n        </div>\r\n    </>\r\n\r\n    const step5 = <div className=\"formImgAnonce\">\r\n        <img src={require('../Assets/images/illustrations/consulterMail.svg').default} />\r\n        <p>Veuillez verifiez votre boite mail</p>\r\n    </div>\r\n\r\n    return [step1, step2, step3, step4, step5];\r\n}\r\n\r\n","import { useState } from \"react\";\r\nimport \"../Assets/styles/auth.css\";\r\nimport \"../Assets/styles/materialdesignicons.min.css\";\r\nimport { AuthContainer, AuthFormConnexion } from \"../RoutesSubComponents/authComponents\";\r\n\r\nconst Connexion = () => {\r\n    return <AuthContainer props={{ authType: 'Connexion', authForm: <AuthFormConnexion /> }} />\r\n}\r\n\r\nexport default Connexion;","import \"../Assets/styles/auth.css\";\r\nimport \"../Assets/styles/materialdesignicons.min.css\";\r\nimport { AuthContainer, AuthFormInscription } from \"../RoutesSubComponents/authComponents\";\r\nimport { useState } from \"react\";\r\n\r\nconst Inscription = () => {\r\n    return (<>\r\n        <AuthContainer props={{ authType: 'Inscription', authForm: <AuthFormInscription /> }} />\r\n    </>)\r\n}\r\n\r\nexport default Inscription;","import Accueil from \"./Routes/Accueil\";\nimport Connexion from \"./Routes/Connexion\";\nimport Inscription from \"./Routes/Inscription\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport './Assets/styles/default.css';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Accueil />} />\n        <Route path='/Connexion' element={<Connexion />} />\n        <Route path='/Inscription' element={<Inscription />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}